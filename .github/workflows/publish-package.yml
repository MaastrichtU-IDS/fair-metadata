name: Publish package
# Publish to PyPI when new release on GitHub, if tests pass
on:
  workflow_dispatch:
  ## Uncomment the following lines to enable publishing when new release on GitHub
  # release:
  #   types: [created]

jobs:

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      # Warnings if there are Python syntax errors or undefined names 
      # (remove --exit-zero to fail when syntax error)
      run: |
        flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python setup.py pytest
  
  publish:
    needs: tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Build and publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

  ## To enable Docker push:
  ## * Provide Docker registry credentials as secret
  ## * Rename the Docker repository and uncomment above
  # docker-push:
  #   needs: tests
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: docker/build-push-action@v1
  #     with:
  #       username: ${{ secrets.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKER_PASSWORD }}
  #       repository: umids/my-package
  #       tag_with_ref: true
          # Use env var GITHUB_TAG (set auto from git repo)